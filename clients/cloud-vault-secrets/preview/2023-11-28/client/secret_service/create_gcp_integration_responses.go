// Code generated by go-swagger; DO NOT EDIT.

package secret_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hashicorp/hcp-sdk-go/clients/cloud-vault-secrets/preview/2023-11-28/models"
)

// CreateGcpIntegrationReader is a Reader for the CreateGcpIntegration structure.
type CreateGcpIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGcpIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGcpIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateGcpIntegrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateGcpIntegrationOK creates a CreateGcpIntegrationOK with default headers values
func NewCreateGcpIntegrationOK() *CreateGcpIntegrationOK {
	return &CreateGcpIntegrationOK{}
}

/*
CreateGcpIntegrationOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateGcpIntegrationOK struct {
	Payload *models.Secrets20231128CreateGcpIntegrationResponse
}

// IsSuccess returns true when this create gcp integration o k response has a 2xx status code
func (o *CreateGcpIntegrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create gcp integration o k response has a 3xx status code
func (o *CreateGcpIntegrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp integration o k response has a 4xx status code
func (o *CreateGcpIntegrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp integration o k response has a 5xx status code
func (o *CreateGcpIntegrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp integration o k response a status code equal to that given
func (o *CreateGcpIntegrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create gcp integration o k response
func (o *CreateGcpIntegrationOK) Code() int {
	return 200
}

func (o *CreateGcpIntegrationOK) Error() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/gcp/config][%d] createGcpIntegrationOK  %+v", 200, o.Payload)
}

func (o *CreateGcpIntegrationOK) String() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/gcp/config][%d] createGcpIntegrationOK  %+v", 200, o.Payload)
}

func (o *CreateGcpIntegrationOK) GetPayload() *models.Secrets20231128CreateGcpIntegrationResponse {
	return o.Payload
}

func (o *CreateGcpIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Secrets20231128CreateGcpIntegrationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpIntegrationDefault creates a CreateGcpIntegrationDefault with default headers values
func NewCreateGcpIntegrationDefault(code int) *CreateGcpIntegrationDefault {
	return &CreateGcpIntegrationDefault{
		_statusCode: code,
	}
}

/*
CreateGcpIntegrationDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateGcpIntegrationDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this create gcp integration default response has a 2xx status code
func (o *CreateGcpIntegrationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create gcp integration default response has a 3xx status code
func (o *CreateGcpIntegrationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create gcp integration default response has a 4xx status code
func (o *CreateGcpIntegrationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create gcp integration default response has a 5xx status code
func (o *CreateGcpIntegrationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create gcp integration default response a status code equal to that given
func (o *CreateGcpIntegrationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create gcp integration default response
func (o *CreateGcpIntegrationDefault) Code() int {
	return o._statusCode
}

func (o *CreateGcpIntegrationDefault) Error() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/gcp/config][%d] CreateGcpIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *CreateGcpIntegrationDefault) String() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/integrations/gcp/config][%d] CreateGcpIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *CreateGcpIntegrationDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *CreateGcpIntegrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateGcpIntegrationBody create gcp integration body
swagger:model CreateGcpIntegrationBody
*/
type CreateGcpIntegrationBody struct {

	// federated workload identity
	FederatedWorkloadIdentity *models.Secrets20231128GcpFederatedWorkloadIdentityRequest `json:"federated_workload_identity,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this create gcp integration body
func (o *CreateGcpIntegrationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFederatedWorkloadIdentity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateGcpIntegrationBody) validateFederatedWorkloadIdentity(formats strfmt.Registry) error {
	if swag.IsZero(o.FederatedWorkloadIdentity) { // not required
		return nil
	}

	if o.FederatedWorkloadIdentity != nil {
		if err := o.FederatedWorkloadIdentity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "federated_workload_identity")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "federated_workload_identity")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create gcp integration body based on the context it is used
func (o *CreateGcpIntegrationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateFederatedWorkloadIdentity(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateGcpIntegrationBody) contextValidateFederatedWorkloadIdentity(ctx context.Context, formats strfmt.Registry) error {

	if o.FederatedWorkloadIdentity != nil {

		if swag.IsZero(o.FederatedWorkloadIdentity) { // not required
			return nil
		}

		if err := o.FederatedWorkloadIdentity.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "federated_workload_identity")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "federated_workload_identity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateGcpIntegrationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateGcpIntegrationBody) UnmarshalBinary(b []byte) error {
	var res CreateGcpIntegrationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
