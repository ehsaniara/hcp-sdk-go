// Code generated by go-swagger; DO NOT EDIT.

package secret_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hashicorp/hcp-sdk-go/clients/cloud-vault-secrets/preview/2023-11-28/models"
)

// CreateAwsDynamicSecretReader is a Reader for the CreateAwsDynamicSecret structure.
type CreateAwsDynamicSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAwsDynamicSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAwsDynamicSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateAwsDynamicSecretDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateAwsDynamicSecretOK creates a CreateAwsDynamicSecretOK with default headers values
func NewCreateAwsDynamicSecretOK() *CreateAwsDynamicSecretOK {
	return &CreateAwsDynamicSecretOK{}
}

/*
CreateAwsDynamicSecretOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateAwsDynamicSecretOK struct {
	Payload *models.Secrets20231128CreateAwsDynamicSecretResponse
}

// IsSuccess returns true when this create aws dynamic secret o k response has a 2xx status code
func (o *CreateAwsDynamicSecretOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create aws dynamic secret o k response has a 3xx status code
func (o *CreateAwsDynamicSecretOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create aws dynamic secret o k response has a 4xx status code
func (o *CreateAwsDynamicSecretOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create aws dynamic secret o k response has a 5xx status code
func (o *CreateAwsDynamicSecretOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create aws dynamic secret o k response a status code equal to that given
func (o *CreateAwsDynamicSecretOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create aws dynamic secret o k response
func (o *CreateAwsDynamicSecretOK) Code() int {
	return 200
}

func (o *CreateAwsDynamicSecretOK) Error() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/apps/{app_name}/dynamic/aws/secret][%d] createAwsDynamicSecretOK  %+v", 200, o.Payload)
}

func (o *CreateAwsDynamicSecretOK) String() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/apps/{app_name}/dynamic/aws/secret][%d] createAwsDynamicSecretOK  %+v", 200, o.Payload)
}

func (o *CreateAwsDynamicSecretOK) GetPayload() *models.Secrets20231128CreateAwsDynamicSecretResponse {
	return o.Payload
}

func (o *CreateAwsDynamicSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Secrets20231128CreateAwsDynamicSecretResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAwsDynamicSecretDefault creates a CreateAwsDynamicSecretDefault with default headers values
func NewCreateAwsDynamicSecretDefault(code int) *CreateAwsDynamicSecretDefault {
	return &CreateAwsDynamicSecretDefault{
		_statusCode: code,
	}
}

/*
CreateAwsDynamicSecretDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CreateAwsDynamicSecretDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this create aws dynamic secret default response has a 2xx status code
func (o *CreateAwsDynamicSecretDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create aws dynamic secret default response has a 3xx status code
func (o *CreateAwsDynamicSecretDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create aws dynamic secret default response has a 4xx status code
func (o *CreateAwsDynamicSecretDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create aws dynamic secret default response has a 5xx status code
func (o *CreateAwsDynamicSecretDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create aws dynamic secret default response a status code equal to that given
func (o *CreateAwsDynamicSecretDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create aws dynamic secret default response
func (o *CreateAwsDynamicSecretDefault) Code() int {
	return o._statusCode
}

func (o *CreateAwsDynamicSecretDefault) Error() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/apps/{app_name}/dynamic/aws/secret][%d] CreateAwsDynamicSecret default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAwsDynamicSecretDefault) String() string {
	return fmt.Sprintf("[POST /secrets/2023-11-28/organizations/{organization_id}/projects/{project_id}/apps/{app_name}/dynamic/aws/secret][%d] CreateAwsDynamicSecret default  %+v", o._statusCode, o.Payload)
}

func (o *CreateAwsDynamicSecretDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *CreateAwsDynamicSecretDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateAwsDynamicSecretBody create aws dynamic secret body
swagger:model CreateAwsDynamicSecretBody
*/
type CreateAwsDynamicSecretBody struct {

	// assume role
	AssumeRole *models.Secrets20231128AssumeRoleRequest `json:"assume_role,omitempty"`

	// default ttl
	DefaultTTL string `json:"default_ttl,omitempty"`

	// integration name
	IntegrationName string `json:"integration_name,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this create aws dynamic secret body
func (o *CreateAwsDynamicSecretBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssumeRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsDynamicSecretBody) validateAssumeRole(formats strfmt.Registry) error {
	if swag.IsZero(o.AssumeRole) { // not required
		return nil
	}

	if o.AssumeRole != nil {
		if err := o.AssumeRole.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "assume_role")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "assume_role")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create aws dynamic secret body based on the context it is used
func (o *CreateAwsDynamicSecretBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAssumeRole(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAwsDynamicSecretBody) contextValidateAssumeRole(ctx context.Context, formats strfmt.Registry) error {

	if o.AssumeRole != nil {

		if swag.IsZero(o.AssumeRole) { // not required
			return nil
		}

		if err := o.AssumeRole.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "assume_role")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "assume_role")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateAwsDynamicSecretBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAwsDynamicSecretBody) UnmarshalBinary(b []byte) error {
	var res CreateAwsDynamicSecretBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
