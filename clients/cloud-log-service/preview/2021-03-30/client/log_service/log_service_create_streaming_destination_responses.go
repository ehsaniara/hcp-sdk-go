// Code generated by go-swagger; DO NOT EDIT.

package log_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hashicorp/hcp-sdk-go/clients/cloud-log-service/preview/2021-03-30/models"
)

// LogServiceCreateStreamingDestinationReader is a Reader for the LogServiceCreateStreamingDestination structure.
type LogServiceCreateStreamingDestinationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogServiceCreateStreamingDestinationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogServiceCreateStreamingDestinationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewLogServiceCreateStreamingDestinationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLogServiceCreateStreamingDestinationOK creates a LogServiceCreateStreamingDestinationOK with default headers values
func NewLogServiceCreateStreamingDestinationOK() *LogServiceCreateStreamingDestinationOK {
	return &LogServiceCreateStreamingDestinationOK{}
}

/*
LogServiceCreateStreamingDestinationOK describes a response with status code 200, with default header values.

A successful response.
*/
type LogServiceCreateStreamingDestinationOK struct {
	Payload *models.LogService20210330CreateStreamingDestinationResponse
}

// IsSuccess returns true when this log service create streaming destination o k response has a 2xx status code
func (o *LogServiceCreateStreamingDestinationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this log service create streaming destination o k response has a 3xx status code
func (o *LogServiceCreateStreamingDestinationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this log service create streaming destination o k response has a 4xx status code
func (o *LogServiceCreateStreamingDestinationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this log service create streaming destination o k response has a 5xx status code
func (o *LogServiceCreateStreamingDestinationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this log service create streaming destination o k response a status code equal to that given
func (o *LogServiceCreateStreamingDestinationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the log service create streaming destination o k response
func (o *LogServiceCreateStreamingDestinationOK) Code() int {
	return 200
}

func (o *LogServiceCreateStreamingDestinationOK) Error() string {
	return fmt.Sprintf("[POST /logs/2021-03-30/organizations/{location.organization_id}/projects/{location.project_id}/resources/destinations][%d] logServiceCreateStreamingDestinationOK  %+v", 200, o.Payload)
}

func (o *LogServiceCreateStreamingDestinationOK) String() string {
	return fmt.Sprintf("[POST /logs/2021-03-30/organizations/{location.organization_id}/projects/{location.project_id}/resources/destinations][%d] logServiceCreateStreamingDestinationOK  %+v", 200, o.Payload)
}

func (o *LogServiceCreateStreamingDestinationOK) GetPayload() *models.LogService20210330CreateStreamingDestinationResponse {
	return o.Payload
}

func (o *LogServiceCreateStreamingDestinationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogService20210330CreateStreamingDestinationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogServiceCreateStreamingDestinationDefault creates a LogServiceCreateStreamingDestinationDefault with default headers values
func NewLogServiceCreateStreamingDestinationDefault(code int) *LogServiceCreateStreamingDestinationDefault {
	return &LogServiceCreateStreamingDestinationDefault{
		_statusCode: code,
	}
}

/*
LogServiceCreateStreamingDestinationDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type LogServiceCreateStreamingDestinationDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// IsSuccess returns true when this log service create streaming destination default response has a 2xx status code
func (o *LogServiceCreateStreamingDestinationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this log service create streaming destination default response has a 3xx status code
func (o *LogServiceCreateStreamingDestinationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this log service create streaming destination default response has a 4xx status code
func (o *LogServiceCreateStreamingDestinationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this log service create streaming destination default response has a 5xx status code
func (o *LogServiceCreateStreamingDestinationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this log service create streaming destination default response a status code equal to that given
func (o *LogServiceCreateStreamingDestinationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the log service create streaming destination default response
func (o *LogServiceCreateStreamingDestinationDefault) Code() int {
	return o._statusCode
}

func (o *LogServiceCreateStreamingDestinationDefault) Error() string {
	return fmt.Sprintf("[POST /logs/2021-03-30/organizations/{location.organization_id}/projects/{location.project_id}/resources/destinations][%d] LogService_CreateStreamingDestination default  %+v", o._statusCode, o.Payload)
}

func (o *LogServiceCreateStreamingDestinationDefault) String() string {
	return fmt.Sprintf("[POST /logs/2021-03-30/organizations/{location.organization_id}/projects/{location.project_id}/resources/destinations][%d] LogService_CreateStreamingDestination default  %+v", o._statusCode, o.Payload)
}

func (o *LogServiceCreateStreamingDestinationDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *LogServiceCreateStreamingDestinationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
