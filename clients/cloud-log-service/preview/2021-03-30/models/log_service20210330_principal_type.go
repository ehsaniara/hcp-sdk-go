// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LogService20210330PrincipalType Type is the type of the principal.
//
//   - TYPE_USER: TYPE_USER indicates that the action was performed by a user.
//   - TYPE_SERVICE: TYPE_SERVICE indicates that the action was performed by a service
//
// principal.
//   - TYPE_INTERNAL_OPERATOR: TYPE_INTERNAL_OPERATOR indicates that the action was performed by a
//
// HashiCorp operator.
//
// swagger:model log_service_20210330PrincipalType
type LogService20210330PrincipalType string

func NewLogService20210330PrincipalType(value LogService20210330PrincipalType) *LogService20210330PrincipalType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated LogService20210330PrincipalType.
func (m LogService20210330PrincipalType) Pointer() *LogService20210330PrincipalType {
	return &m
}

const (

	// LogService20210330PrincipalTypeTYPEUSER captures enum value "TYPE_USER"
	LogService20210330PrincipalTypeTYPEUSER LogService20210330PrincipalType = "TYPE_USER"

	// LogService20210330PrincipalTypeTYPESERVICE captures enum value "TYPE_SERVICE"
	LogService20210330PrincipalTypeTYPESERVICE LogService20210330PrincipalType = "TYPE_SERVICE"

	// LogService20210330PrincipalTypeTYPEINTERNALOPERATOR captures enum value "TYPE_INTERNAL_OPERATOR"
	LogService20210330PrincipalTypeTYPEINTERNALOPERATOR LogService20210330PrincipalType = "TYPE_INTERNAL_OPERATOR"
)

// for schema
var logService20210330PrincipalTypeEnum []interface{}

func init() {
	var res []LogService20210330PrincipalType
	if err := json.Unmarshal([]byte(`["TYPE_USER","TYPE_SERVICE","TYPE_INTERNAL_OPERATOR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		logService20210330PrincipalTypeEnum = append(logService20210330PrincipalTypeEnum, v)
	}
}

func (m LogService20210330PrincipalType) validateLogService20210330PrincipalTypeEnum(path, location string, value LogService20210330PrincipalType) error {
	if err := validate.EnumCase(path, location, value, logService20210330PrincipalTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this log service 20210330 principal type
func (m LogService20210330PrincipalType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogService20210330PrincipalTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this log service 20210330 principal type based on context it is used
func (m LogService20210330PrincipalType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
