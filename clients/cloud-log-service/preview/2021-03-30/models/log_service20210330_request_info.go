// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LogService20210330RequestInfo RequestInfo contains information about the request that triggered an event.
//
// swagger:model log_service_20210330RequestInfo
type LogService20210330RequestInfo struct {

	// http_client_ip is the IP address of the client sending the HTTP request if
	// there was one.
	HTTPClientIP string `json:"http_client_ip,omitempty"`

	// http_path is the URL path of the respective HTTP request if there was one.
	HTTPPath string `json:"http_path,omitempty"`

	// http_user_agent is the user agent sent as part of the respective HTTP
	// request if there was one.
	HTTPUserAgent string `json:"http_user_agent,omitempty"`

	// http_verb is the HTTP verb/method of the respective HTTP request if there
	// was one.
	HTTPVerb string `json:"http_verb,omitempty"`
}

// Validate validates this log service 20210330 request info
func (m *LogService20210330RequestInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this log service 20210330 request info based on context it is used
func (m *LogService20210330RequestInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LogService20210330RequestInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LogService20210330RequestInfo) UnmarshalBinary(b []byte) error {
	var res LogService20210330RequestInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
