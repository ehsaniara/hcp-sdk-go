// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LogService20210330LogStream LogStream identifies a log stream.
//
// swagger:model log_service_20210330LogStream
type LogService20210330LogStream struct {

	// organization_id is the UUID of the HCP organization this stream belongs to.
	OrganizationID string `json:"organization_id,omitempty"`

	// project_id is the UUID of the HCP project this stream belongs to.
	// If no project_id is set, this stream belongs to an organization directly.
	ProjectID string `json:"project_id,omitempty"`

	// topic is the logical name of the log stream.
	Topic string `json:"topic,omitempty"`
}

// Validate validates this log service 20210330 log stream
func (m *LogService20210330LogStream) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this log service 20210330 log stream based on context it is used
func (m *LogService20210330LogStream) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LogService20210330LogStream) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LogService20210330LogStream) UnmarshalBinary(b []byte) error {
	var res LogService20210330LogStream
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
