// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LogService20210330AuthorizationInfo AuthorizationInfo contains information about the permissions granted to the
// person triggering a control-plane event.
//
// swagger:model log_service_20210330AuthorizationInfo
type LogService20210330AuthorizationInfo struct {

	// organization_id is the ID of the organization the permission was granted
	// on.
	OrganizationID string `json:"organization_id,omitempty"`

	// permissions is the list of permissions required to perform the action.
	Permissions []string `json:"permissions"`

	// project_id is the ID of the project the permission was granted on.
	ProjectID string `json:"project_id,omitempty"`

	// resource_id is the ID of the resource the permission was granted on.
	ResourceID string `json:"resource_id,omitempty"`
}

// Validate validates this log service 20210330 authorization info
func (m *LogService20210330AuthorizationInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this log service 20210330 authorization info based on context it is used
func (m *LogService20210330AuthorizationInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LogService20210330AuthorizationInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LogService20210330AuthorizationInfo) UnmarshalBinary(b []byte) error {
	var res LogService20210330AuthorizationInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
