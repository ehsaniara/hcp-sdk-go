// Code generated by go-swagger; DO NOT EDIT.

package service_principals_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteProjectServicePrincipalKeyParams creates a new DeleteProjectServicePrincipalKeyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteProjectServicePrincipalKeyParams() *DeleteProjectServicePrincipalKeyParams {
	return &DeleteProjectServicePrincipalKeyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteProjectServicePrincipalKeyParamsWithTimeout creates a new DeleteProjectServicePrincipalKeyParams object
// with the ability to set a timeout on a request.
func NewDeleteProjectServicePrincipalKeyParamsWithTimeout(timeout time.Duration) *DeleteProjectServicePrincipalKeyParams {
	return &DeleteProjectServicePrincipalKeyParams{
		timeout: timeout,
	}
}

// NewDeleteProjectServicePrincipalKeyParamsWithContext creates a new DeleteProjectServicePrincipalKeyParams object
// with the ability to set a context for a request.
func NewDeleteProjectServicePrincipalKeyParamsWithContext(ctx context.Context) *DeleteProjectServicePrincipalKeyParams {
	return &DeleteProjectServicePrincipalKeyParams{
		Context: ctx,
	}
}

// NewDeleteProjectServicePrincipalKeyParamsWithHTTPClient creates a new DeleteProjectServicePrincipalKeyParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteProjectServicePrincipalKeyParamsWithHTTPClient(client *http.Client) *DeleteProjectServicePrincipalKeyParams {
	return &DeleteProjectServicePrincipalKeyParams{
		HTTPClient: client,
	}
}

/*
DeleteProjectServicePrincipalKeyParams contains all the parameters to send to the API endpoint

	for the delete project service principal key operation.

	Typically these are written to a http.Request.
*/
type DeleteProjectServicePrincipalKeyParams struct {

	/* ClientID.

	   client_id is client ID of the service principal key.
	*/
	ClientID string

	/* OrganizationID.

	   organization_id is the organization the service principal key belongs to.
	*/
	OrganizationID string

	/* ProjectID.

	   project_id is the project the service principal key belongs to.
	*/
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete project service principal key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteProjectServicePrincipalKeyParams) WithDefaults() *DeleteProjectServicePrincipalKeyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete project service principal key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteProjectServicePrincipalKeyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) WithTimeout(timeout time.Duration) *DeleteProjectServicePrincipalKeyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) WithContext(ctx context.Context) *DeleteProjectServicePrincipalKeyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) WithHTTPClient(client *http.Client) *DeleteProjectServicePrincipalKeyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientID adds the clientID to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) WithClientID(clientID string) *DeleteProjectServicePrincipalKeyParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) SetClientID(clientID string) {
	o.ClientID = clientID
}

// WithOrganizationID adds the organizationID to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) WithOrganizationID(organizationID string) *DeleteProjectServicePrincipalKeyParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithProjectID adds the projectID to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) WithProjectID(projectID string) *DeleteProjectServicePrincipalKeyParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the delete project service principal key params
func (o *DeleteProjectServicePrincipalKeyParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteProjectServicePrincipalKeyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param client_id
	if err := r.SetPathParam("client_id", o.ClientID); err != nil {
		return err
	}

	// path param organization_id
	if err := r.SetPathParam("organization_id", o.OrganizationID); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
