// Code generated by go-swagger; DO NOT EDIT.

package registry_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	cloud "github.com/hashicorp/hcp-sdk-go/clients/cloud-shared/v1/models"
	"github.com/hashicorp/hcp-sdk-go/clients/cloud-vagrant-box-registry/preview/2022-09-30/models"
)

// CompleteUploadBoxReader is a Reader for the CompleteUploadBox structure.
type CompleteUploadBoxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CompleteUploadBoxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCompleteUploadBoxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCompleteUploadBoxDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCompleteUploadBoxOK creates a CompleteUploadBoxOK with default headers values
func NewCompleteUploadBoxOK() *CompleteUploadBoxOK {
	return &CompleteUploadBoxOK{}
}

/*
CompleteUploadBoxOK describes a response with status code 200, with default header values.

A successful response.
*/
type CompleteUploadBoxOK struct {
	Payload models.HashicorpCloudVagrant20220930CompleteUploadBoxResponse
}

// IsSuccess returns true when this complete upload box o k response has a 2xx status code
func (o *CompleteUploadBoxOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this complete upload box o k response has a 3xx status code
func (o *CompleteUploadBoxOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete upload box o k response has a 4xx status code
func (o *CompleteUploadBoxOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete upload box o k response has a 5xx status code
func (o *CompleteUploadBoxOK) IsServerError() bool {
	return false
}

// IsCode returns true when this complete upload box o k response a status code equal to that given
func (o *CompleteUploadBoxOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the complete upload box o k response
func (o *CompleteUploadBoxOK) Code() int {
	return 200
}

func (o *CompleteUploadBoxOK) Error() string {
	return fmt.Sprintf("[PUT /vagrant/2022-09-30/registry/{registry}/box/{box}/version/{version}/provider/{provider}/architecture/{architecture}/complete][%d] completeUploadBoxOK  %+v", 200, o.Payload)
}

func (o *CompleteUploadBoxOK) String() string {
	return fmt.Sprintf("[PUT /vagrant/2022-09-30/registry/{registry}/box/{box}/version/{version}/provider/{provider}/architecture/{architecture}/complete][%d] completeUploadBoxOK  %+v", 200, o.Payload)
}

func (o *CompleteUploadBoxOK) GetPayload() models.HashicorpCloudVagrant20220930CompleteUploadBoxResponse {
	return o.Payload
}

func (o *CompleteUploadBoxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteUploadBoxDefault creates a CompleteUploadBoxDefault with default headers values
func NewCompleteUploadBoxDefault(code int) *CompleteUploadBoxDefault {
	return &CompleteUploadBoxDefault{
		_statusCode: code,
	}
}

/*
CompleteUploadBoxDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CompleteUploadBoxDefault struct {
	_statusCode int

	Payload *cloud.GoogleRPCStatus
}

// IsSuccess returns true when this complete upload box default response has a 2xx status code
func (o *CompleteUploadBoxDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this complete upload box default response has a 3xx status code
func (o *CompleteUploadBoxDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this complete upload box default response has a 4xx status code
func (o *CompleteUploadBoxDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this complete upload box default response has a 5xx status code
func (o *CompleteUploadBoxDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this complete upload box default response a status code equal to that given
func (o *CompleteUploadBoxDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the complete upload box default response
func (o *CompleteUploadBoxDefault) Code() int {
	return o._statusCode
}

func (o *CompleteUploadBoxDefault) Error() string {
	return fmt.Sprintf("[PUT /vagrant/2022-09-30/registry/{registry}/box/{box}/version/{version}/provider/{provider}/architecture/{architecture}/complete][%d] CompleteUploadBox default  %+v", o._statusCode, o.Payload)
}

func (o *CompleteUploadBoxDefault) String() string {
	return fmt.Sprintf("[PUT /vagrant/2022-09-30/registry/{registry}/box/{box}/version/{version}/provider/{provider}/architecture/{architecture}/complete][%d] CompleteUploadBox default  %+v", o._statusCode, o.Payload)
}

func (o *CompleteUploadBoxDefault) GetPayload() *cloud.GoogleRPCStatus {
	return o.Payload
}

func (o *CompleteUploadBoxDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(cloud.GoogleRPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CompleteUploadBoxBody complete upload box body
swagger:model CompleteUploadBoxBody
*/
type CompleteUploadBoxBody struct {

	// Size of the artifact uploaded.
	Bytes string `json:"bytes,omitempty"`

	// Storage key of the upload.
	Key string `json:"key,omitempty"`

	// Object identifier.
	Object string `json:"object,omitempty"`

	// Success status of the upload.
	Success bool `json:"success,omitempty"`
}

// Validate validates this complete upload box body
func (o *CompleteUploadBoxBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this complete upload box body based on context it is used
func (o *CompleteUploadBoxBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CompleteUploadBoxBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CompleteUploadBoxBody) UnmarshalBinary(b []byte) error {
	var res CompleteUploadBoxBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
